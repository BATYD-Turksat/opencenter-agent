#! /bin/sh
### BEGIN INIT INFO
# Provides:          opencenter-agent
# Required-Start:    $remote_fs $syslog
# Required-Stop:     $remote_fs $syslog
# Default-Start:     2 3 4 5
# Default-Stop:      0 1 6
# Short-Description: opencenter-agent init script
# Description:       this file controls the opencenter-agent, yet another host-based modular agent
### END INIT INFO

# Author: Ron Pedde <ron.pedde@rackspace.com>

# Do NOT "set -e"

# PATH should only include /usr/* if it runs after the mountnfs.sh script
PATH=/sbin:/usr/sbin:/bin:/usr/bin
DESC="host-based modular python agent"
NAME=opencenter-agent
DAEMON=/usr/bin/$NAME.py
DAEMON_ARGS="-c /etc/opencenter-agent.conf -d"
PIDFILE=/var/run/$NAME.pid
SCRIPTNAME=/etc/init.d/$NAME
lockfile=/var/lock/subsys/opencenter-agent

# Exit if the package is not installed
[ -x "$DAEMON" ] || exit 0

# Read configuration variable file if it is present
[ -r /etc/sysconfig/$NAME ] && . /etc/sysconfig/$NAME

. /etc/rc.d/init.d/functions

#
# Function that starts the daemon/service
#
do_start()
{
    if [ $UID -ne 0 ] ; then
        echo "User has insufficient privilege."
        exit 4
    fi
    [ -x $DAEMON ] || exit 5
    echo -n $"Starting $NAME: "
    daemon --pidfile=$PIDFILE $DAEMON $DAEMON_ARGS
    retval=$?
    echo
    [ $retval -eq 0 ] && touch $lockfile
}

#
# Function that stops the daemon/service
#
do_stop()
{
    if [ $UID -ne 0 ] ; then
        echo "User has insufficient privilege."
        exit 4
    fi
    echo -n $"Stopping $NAME: "
	if [ -n "`pidfileofproc $exec`" ]; then
		killproc -p $PIDFILE
		RETVAL=3
	else
		failure $"Stopping $NAME"
	fi
    retval=$?
    echo
    [ $retval -eq 0 ] && rm -f $lockfile
}

#
# Function that sends a SIGHUP to the daemon/service
#
do_reload() {
	echo -n $"Reloading $NAME: "
	if [ -n "`pidfileofproc $exec`" ]; then
		killproc -p $PIDFILE -HUP
	else
		failure $"Reloading $NAME"
	fi
	retval=$?
	echo
}

case "$1" in
  start)
        do_start
        ;;
  stop)
        do_stop
        ;;
  status)
        # run checks to determine if the service is running or use generic status
        status -p /var/run/opencenter-agent.pid $NAME
	;;
  restart|force-reload)
        #
        # If the "reload" option is implemented then remove the
        # 'force-reload' alias
        #
        do_stop
        do_start
        ;;
  *)
        echo "Usage: $SCRIPTNAME {start|stop|status|restart|force-reload}" >&2
        exit 3
        ;;
esac
